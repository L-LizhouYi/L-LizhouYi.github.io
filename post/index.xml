<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on @Liulang</title>
        <link>https://blog.eeho.cn/post/</link>
        <description>Recent content in Posts on @Liulang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 03 Dec 2023 00:08:05 +0800</lastBuildDate><atom:link href="https://blog.eeho.cn/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Linux  KkFileview 安装与配置</title>
        <link>https://blog.eeho.cn/p/linux-kkfileview-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Sun, 03 Dec 2023 00:08:05 +0800</pubDate>
        
        <guid>https://blog.eeho.cn/p/linux-kkfileview-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;img src="https://blog.eeho.cn/p/linux-kkfileview-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/BackGround.png" alt="Featured image of post Linux  KkFileview 安装与配置" /&gt;安装Java 1.8 Jdk1.8 Download下载地址
上传到Linux后解压，编辑 ~/.bash_profile 或 /etc/profile 配置环境变量即可。
1 2 3 4 5 6 # 注意路径 export JAVA_HOME=/opt/jdk1.8.0_202/ export PATH=$PATH:$JAVA_HOME/bin #保存后执行 source ~/.bash_profile 安装LibreOffice 7.5.8 首先去LibreOffice的官网下载对应系统的安装包，截止到写这篇文章的时候KkFileview已经在GitHub上更新了4.4.0，描述中说支持了LibreOffice 7.6 但给出的安装脚本中的LibreOffice的版本还是 7.5.3.2。
上传并解压，然后进入 RPMS 目录下并安装RPM包，如果是Centos或Ubuntu的话可以直接参考Kkfileview的install.sh安装脚本。
1 2 3 4 # Fedora Linux cd ./RPMS dnf install -y libXinerama cups-libs cairo dnf install ./*rpm -y 1 2 3 4 # Centos Linux yum install -y libSM.x86_64 libXrender.x86_64 libXext.x86_64 yum groupinstall -y &amp;#34;X Window System&amp;#34; yum localinstall -y *.</description>
        </item>
        <item>
        <title>Ookla_SpeedTest 搭建</title>
        <link>https://blog.eeho.cn/p/ookla_speedtest-%E6%90%AD%E5%BB%BA/</link>
        <pubDate>Sun, 10 Sep 2023 21:08:05 +0800</pubDate>
        
        <guid>https://blog.eeho.cn/p/ookla_speedtest-%E6%90%AD%E5%BB%BA/</guid>
        <description>&lt;img src="https://blog.eeho.cn/p/ookla_speedtest-%E6%90%AD%E5%BB%BA/BackGround.png" alt="Featured image of post Ookla_SpeedTest 搭建" /&gt;让我仔细看看你的模样 倒数着最后的谢幕时光
我的白马儿呀你慢些跑啊 这一次没有我带你回家
—— 马.福禄寿
环境准备 Python3 服务器 &amp;lt;系统不限&amp;gt; 域名 SSL证书 &amp;lt;Let&amp;rsquo;s Encrypt 泛域名&amp;gt; Ookla_Speedtest_Flask 点我跳转
安装部署 拉取项目 建议使用 Git 命令 Clone
1 git clone https://github.com/L-LizhouYi/Ookla_Speedtest_Flask.git 安装依赖库 1 2 cd Ookla_Speedtest_Flask python3 -m pip install -r requirements.txt 启动服务 启动服务并在浏览器中访问
访问站点后会自动创建数据库，但由于数据库中没有测速节点，所以页面就会显示无法连接。
使用 sqlite3 命令添加一条节点，节点可以去项目页面获取。
1 INSERT INTO &amp;#34;main&amp;#34;.&amp;#34;speedtest_servers&amp;#34;(&amp;#34;id&amp;#34;, &amp;#34;sponsor&amp;#34;, &amp;#34;name&amp;#34;, &amp;#34;host&amp;#34;, &amp;#34;url&amp;#34;, &amp;#34;country&amp;#34;, &amp;#34;cc&amp;#34;, &amp;#34;lat&amp;#34;, &amp;#34;lon&amp;#34;, &amp;#34;distance&amp;#34;, &amp;#34;preferred&amp;#34;, &amp;#34;https_functional&amp;#34;, &amp;#34;force_ping_select&amp;#34;, &amp;#34;show&amp;#34;, &amp;#34;internal&amp;#34;) VALUES (1, &amp;#39;天津电信&amp;#39;, &amp;#39;天津&amp;#39;, &amp;#39;tjrate.tjtele.com.prod.hosts.ooklaserver.net:8080&amp;#39;, &amp;#39;http://tjrate.tjtele.com:8080/speedtest/upload.php&amp;#39;, &amp;#39;China&amp;#39;, &amp;#39;CN&amp;#39;, 0.</description>
        </item>
        <item>
        <title>Xray-Vless-Nginx-Cf_Wall_方案</title>
        <link>https://blog.eeho.cn/p/xray-vless-nginx-cf_wall_%E6%96%B9%E6%A1%88/</link>
        <pubDate>Sun, 23 Jul 2023 16:54:05 +0800</pubDate>
        
        <guid>https://blog.eeho.cn/p/xray-vless-nginx-cf_wall_%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;img src="https://blog.eeho.cn/p/xray-vless-nginx-cf_wall_%E6%96%B9%E6%A1%88/BackGround.png" alt="Featured image of post Xray-Vless-Nginx-Cf_Wall_方案" /&gt;想不想看花海盛开 想不想看燕子归来.
如果一切都回不来 那么我该为了谁而存在.
&amp;mdash;&amp;mdash; 我用什么把你留住.福禄寿
准备工作 域名 国外VPS（推荐Debian） Cloudflare 工具链接 Bt (开心版)
1 curl -sSO http://io.bt.sy/install/install_panel.sh &amp;amp;&amp;amp; bash install_panel.sh X-UI（Xray管理面板）
1 bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh) 安装部署 安装Bt面板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ================================================================== Congratulations! Installed successfully! ================================================================== 外网面板地址: http://2401:c080:1000:42b4:5400:4ff:fe84:393c:28778/076bb078 内网面板地址: http://198.13.44.212:28778/076bb078 username: pg4wtwxk password: 823db350 If you cannot access the panel, release the following panel port [28778] in the security group 若无法访问面板，请检查防火墙/安全组是否有放行面板[28778]端口 ================================================================== Time consumed: 10 Minute!</description>
        </item>
        <item>
        <title>Hugo首安装和一些魔改</title>
        <link>https://blog.eeho.cn/p/hugo%E9%A6%96%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%80%E4%BA%9B%E9%AD%94%E6%94%B9/</link>
        <pubDate>Sat, 08 Jul 2023 09:42:08 +0800</pubDate>
        
        <guid>https://blog.eeho.cn/p/hugo%E9%A6%96%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%80%E4%BA%9B%E9%AD%94%E6%94%B9/</guid>
        <description>&lt;img src="https://blog.eeho.cn/p/hugo%E9%A6%96%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%80%E4%BA%9B%E9%AD%94%E6%94%B9/BackGround.png" alt="Featured image of post Hugo首安装和一些魔改" /&gt;Hugo的安装记录 随笔 在这个喧嚣的时代正如在我的关于中写的那样，变得越来越浮躁，并且 还多愁善感、犹豫不决，害怕失去从而对一些新鲜事物却望而却步，直接敲起了退堂鼓。
正如薛之谦 《环》中的写的那样 :
美若天仙 金山银山 依旧只能饱览寂寞景观 填不满大海 喂不饱深渊 摘不到月亮的人说肝肠寸断 不肯太近 不能太远 不敢跳出迷人的舒适圈 然后无限循环
Emm 所以我就来写Blog了反正 不会有人看见，嘿嘿&amp;hellip;
准备工作 电脑一台 耐心一份 Md编辑器 开始 Hugo-Github hugo-theme-stack-主题 注意: 要使用hugo-theme-stack这个主题的话需要下载 Hugo的扩展版本
初始化博客 在任意文件夹中使用以下命令即可初始化你的博客，前提是Hugo要被添加进环境变量
1 hugo new site blog hugo-theme-stack主题安装 具体的安装可以看这篇文章 安装教程
遇到的错误 在我按照上面的教程配置完成后，兴致勃勃去创建第一篇文章去了，对就是现在这篇文章，但是它死活创建不了。抛出了一个错误提示，去官网查看说面，给的也是 toml 的配置，Emmm无耐去请教ChatGPT去了。
1 2 3 WARN config: languages.zh-cn.description: custom params on the language top level is deprecated and will be removed in a future release. Put the value below [languages.</description>
        </item>
        
    </channel>
</rss>
